[project]
name = "realtimestt"
version = "0.4.0"
description = "Real-time speech-to-text library"
authors = [
    {name = "KoljaB", email = "kolja.beigel@web.de"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10,<3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Sound/Audio :: Speech"
]

[project.urls]
Homepage = "https://github.com/kamisch/realtimestt.git"
Documentation = "https://github.com/kamisch/realtimestt.git"
Repository = "https://github.com/kamisch/realtimestt.git"
Changelog = "https://github.com/kamisch/realtimestt/blob/main/CHANGELOG.md"

[tool.poetry]
name = "realtimestt"
version = "0.4.0"
packages = [
    { include = "RealtimeSTT" }
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
PyAudio = "~0.2.14"
faster-whisper = "~1.1.1"
pvporcupine = "~1.9.5"
webrtcvad-wheels = "~2.0.14"
halo = "~0.0.31"
torch = ">=2.0.0,<3.0.0"
torchaudio = ">=2.0.0,<3.0.0"
scipy = "~1.15.1"
openwakeword = ">=0.4.0,<0.5.0"
websockets = "~14.2"
websocket-client = "~1.8.0"
numpy = ">=2.0.2,<3.0.0"
soundfile = "~0.13.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.0"
ruff = "^0.0.285"
pre-commit = "^3.3.3"
commitizen = "^4.2.2"

[tool.poetry.group.gpu]
optional = true

[tool.poetry.group.gpu.dependencies]
torch = { version = ">=2.0.0,<3.0.0", extras = ["cuda"] }
torchaudio = { version = ">=2.0.0,<3.0.0", extras = ["cuda"] }

[tool.poetry.scripts]
stt-server = "RealtimeSTT_server.stt_server:main"
stt = "RealtimeSTT_server.stt_cli_client:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=RealtimeSTT"
testpaths = [
    "tests",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
lint.select = ["E", "F", "B"]
lint.ignore = [
    "E501",  # Line too long
    "F841",  # Local variable is assigned to but never used (fix later)
    "B006",  # Do not use mutable data structures for argument defaults (fix later)
    "F401",  # imported but unused; consider using `importlib.util.find_spec` to test for availability (fix later)
]
target-version = "py310"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.4.0"
tag_format = "v$version"
update_changelog_on_bump = true
version_files = [
    "pyproject.toml:version",
    "pyproject.toml:tool.commitizen.version"
]
